//http://codeforces.com/gym/101954/problem/F
#include <bits/stdc++.h>
using namespace std;

const int N = 1e3 + 2;
const int INF = 1e9 + 7;

/************************************/
int n, k;
int S[N];
bool used[N][2][N];
int memo[N][2][N];

int dp(int pos, int carry, int bits) {
	if (bits > k) return 0;
	if (pos == n + 1) return (bits == k ? 1 : 0);
	if (used[pos][carry][bits]) return memo[pos][carry][bits];
	used[pos][carry][bits] = true;
	int &ans = memo[pos][carry][bits] = 0;
	ans = (ans + dp(pos + 1, (carry + S[pos] == 2) , bits + (carry != S[pos])))%INF;
	if(pos < n) {
		ans = (ans + dp(pos + 1, (carry + S[pos] + 1 >= 2), bits + (carry + S[pos] + 1 == 1 || carry + S[pos] + 1 == 3)))%INF;
	}
	return ans;
}

void StrToInt(string &s) {
	for (int i = n - 1; i >= 0; i --) {
		S[i] = s[i] - '0';
	}
}

int main() {
	cin >> n >> k;
	string s;
	cin >> s;
	StrToInt(s);
	cout << dp(0, 0, 0) << endl;
	
	return 0;
}
