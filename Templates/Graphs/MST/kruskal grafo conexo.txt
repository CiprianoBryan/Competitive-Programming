/************************************/
int F[N];

int find(int u) {
	if(!F[u]) return u;
	return F[u] = find(F[u]);
}

void Union(int u, int v){
	u = find(u);
	v = find(v);
	F[u] = v;
}

/************************************/
struct edge {
	int u, v, d;
};

vector<edge> E;

long long kruskal() {
	long long total = 0 ;
	sort(E.begin(), E.end(), [](edge e1, edge e2) {
		return e1.d < e2.d;
	});
	for(int i = 0; i < E.size(); i++) {
		if(find(E[i].u) == find(E[i].v)) {
			continue;
		}
		Union(E[i].u, E[i].v);
		total += E[i].d;
	}
	return total;
}

/************************************/