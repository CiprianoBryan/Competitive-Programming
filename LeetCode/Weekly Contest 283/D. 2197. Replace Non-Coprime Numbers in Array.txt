class Solution {
public:
    inline int gcd(int a, int b) {
        if (b == 0) return a;
        return gcd(b, a%b);
    }
    
    inline int lcm(int a, int b) {
        return a/gcd(a, b)*b;
    }
    
    vector<int> replaceNonCoprimes(vector<int>& nums) {
        vector<int> ans;
        for (int &num: nums) {
            ans.push_back(num);
            while (ans.size() > 1) {
                int posLast = ans.size() - 1;
                if (gcd(ans[posLast], ans[posLast-1]) == 1) break;
                ans.pop_back();
                ans.pop_back();
                ans.push_back(lcm(ans[posLast], ans[posLast-1]));
            }
        }
        return ans;
    }
};